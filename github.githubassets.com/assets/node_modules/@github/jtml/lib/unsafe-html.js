import {
    directive
} from './directive.js';
import {
    NodeTemplatePart
} from '@github/template-parts';
import {
    TemplateResult
} from './template-result.js';
export const unsafeHTML = directive((value) => (part) => {
    var _a, _b;
    if (!(part instanceof NodeTemplatePart))
        return;
    const template = document.createElement('template');
    const trustedValue = (_b = (_a = TemplateResult.cspTrustedTypesPolicy) === null || _a === void 0 ? void 0 : _a.createHTML(value)) !== null && _b !== void 0 ? _b : value;
    template.innerHTML = trustedValue;
    const fragment = document.importNode(template.content, true);
    part.replace(...fragment.childNodes);
});
//# sourceMappingURL=unsafe-html.js.map