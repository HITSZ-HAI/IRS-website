export function arrayFindLast(pred, recv = this) {
    for (let i = this.length - 1; i >= 0; i -= 1) {
        if (pred.call(recv, this[i], i, this))
            return this[i];
    }
}
/*#__PURE__*/
export function isSupported() {
    return 'findLast' in Array.prototype && typeof Array.prototype.findLast === 'function';
}
/*#__PURE__*/
export function isPolyfilled() {
    return Array.prototype.findLast === arrayFindLast;
}
export function apply() {
    if (!isSupported()) {
        const defn = {
            value: arrayFindLast,
            writable: true,
            configurable: true
        };
        Object.defineProperty(Array.prototype, 'findLast', defn);
    }
}
//# sourceMappingURL=array-findlast.js.map