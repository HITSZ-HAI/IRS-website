const TypedArray = Reflect.getPrototypeOf(Int8Array);
export function arrayLikeAt(i) {
    const l = this.length;
    i = Math.trunc(i) || 0;
    if (i < 0)
        i += l;
    return i < 0 || i >= l ? undefined : this[i];
}
/*#__PURE__*/
export function isSupported() {
    return ('at' in Array.prototype &&
        typeof Array.prototype.at === 'function' &&
        'at' in String.prototype &&
        typeof String.prototype.at === 'function' &&
        typeof TypedArray === 'function' &&
        'at' in TypedArray.prototype &&
        typeof TypedArray.prototype.at === 'function');
}
/*#__PURE__*/
export function isPolyfilled() {
    return (Array.prototype.at === arrayLikeAt &&
        String.prototype.at === arrayLikeAt &&
        typeof TypedArray === 'function' &&
        TypedArray.prototype.at === arrayLikeAt);
}
export function apply() {
    if (!isSupported()) {
        const defn = {
            value: arrayLikeAt,
            writable: true,
            configurable: true
        };
        Object.defineProperty(Array.prototype, 'at', defn);
        Object.defineProperty(String.prototype, 'at', defn);
        Object.defineProperty(TypedArray, 'at', defn);
    }
}
//# sourceMappingURL=arraylike-at.js.map