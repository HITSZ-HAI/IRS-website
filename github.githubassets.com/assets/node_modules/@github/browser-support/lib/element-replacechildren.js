export function replaceChildren(...children) {
    while (this.firstChild)
        this.removeChild(this.firstChild);
    this.append(...children);
}
/*#__PURE__*/
export function isSupported() {
    return ('replaceChildren' in Element.prototype &&
        typeof Element.prototype.replaceChildren === 'function' &&
        'replaceChildren' in Document.prototype &&
        typeof Document.prototype.replaceChildren === 'function' &&
        'replaceChildren' in DocumentFragment.prototype &&
        typeof DocumentFragment.prototype.replaceChildren === 'function');
}
/*#__PURE__*/
export function isPolyfilled() {
    return (Element.prototype.replaceChildren === replaceChildren &&
        Document.prototype.replaceChildren === replaceChildren &&
        DocumentFragment.prototype.replaceChildren === replaceChildren);
}
export function apply() {
    if (!isSupported()) {
        Element.prototype.replaceChildren =
            Document.prototype.replaceChildren =
            DocumentFragment.prototype.replaceChildren =
            replaceChildren;
    }
}
//# sourceMappingURL=element-replacechildren.js.map